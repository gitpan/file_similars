<?xml version="1.0" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>File::Searcher::Similars - Similar files locator</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<link rev="made" href="mailto:root@localhost" />
</head>

<body style="background-color: white">


<!-- INDEX BEGIN -->
<div name="index">
<p><a name="__index__"></a></p>

<ul>

	<li><a href="#name">NAME</a></li>
	<li><a href="#synopsis">SYNOPSIS</a></li>
	<li><a href="#description">DESCRIPTION</a></li>
	<li><a href="#author">AUTHOR</a></li>
	<li><a href="#see_also">SEE ALSO</a></li>
	<li><a href="#copyright">COPYRIGHT</a></li>
	<li><a href="#todo">TODO</a></li>
</ul>

<hr name="index" />
</div>
<!-- INDEX END -->

<p>
</p>
<h1><a name="name">NAME</a></h1>
<p>File::Searcher::Similars - Similar files locator</p>
<p>
</p>
<hr />
<h1><a name="synopsis">SYNOPSIS</a></h1>
<pre>
  use File::Searcher::Similars;</pre>
<pre>
  File::Searcher::Similars-&gt;init(0, \@ARGV);
  similarity_check_name();</pre>
<p>Similar-sized and similar-named files are picked as suspicious candidates of
duplicated files.</p>
<p>Please note that this version is deprecated. Future versions are released
as File::Find::Similars.</p>
<p>
</p>
<hr />
<h1><a name="description">DESCRIPTION</a></h1>
<p>Extremely fast file similarity checker. It uses advanced soundex vector
algorithm to determine the similarity between files. Generally it means that
if there are n files, each having approximately m words, the degree of
calculation is merely</p>
<p>O(n^2 * m)</p>
<p>which is over hundreds times faster than any existing file fingerprinting
technology.</p>
<p>The self-test output will help you understand what the module do and what
would you expect from the outcome.</p>
<pre>
  PERL_DL_NONLAZY=1 /usr/bin/perl &quot;-Iblib/lib&quot; &quot;-Iblib/arch&quot; test.pl
  1..4
  # Running under perl version 5.010000 for linux
  # Current time local: Wed Oct 29 11:35:06 2008
  # Current time GMT:   Wed Oct 29 15:35:06 2008
  # Using Test.pm version 1.25
  # Testing File::Searcher::Similars version 1.23
  
  == Testing 1, files under test/ subdir:
  
    9 test/(eBook) GNU - Python Standard Library 2001.pdf
    3 test/CardLayoutTest.java
    5 test/GNU - 2001 - Python Standard Library.pdf
    4 test/GNU - Python Standard Library (2001).rar
    9 test/LayoutTest.java
    3 test/PopupTest.java
    2 test/Python Standard Library.zip
    5 test/TestLayout.java
  ok 1
  
  Note:
  
  - The fileSimilars.pl script will pick out similar files from them in next test.
  - Let's assume that the number represent the file size in KB.
  
  == Testing 2 result should be:
  
  ## =========
             3 'CardLayoutTest.java' 'test/'
             5 'TestLayout.java' 'test/'
  
  ## =========
             4 'GNU - Python Standard Library (2001).rar' 'test/'
             5 'GNU - 2001 - Python Standard Library.pdf' 'test/'
  ok 2
  
  Note:
  
  - There are 2 groups of similar files picked out by the script.
    The second group makes more sense.
  - The similar files are picked because their file names looks similar.
  - However, the file size plays an important role as well.
  - There are 2 files in the second similar files group.
  - The file 'Python Standard Library.zip' is not considered to be similar to
    the group because its size is not similar to the group.
  
  == Testing 3, if Python.zip is bigger, result should be:
  
  ## =========
             3 'CardLayoutTest.java' 'test/'
             5 'TestLayout.java' 'test/'
  
  ## =========
             4 'Python Standard Library.zip' 'test/'
             4 'GNU - Python Standard Library (2001).rar' 'test/'
             5 'GNU - 2001 - Python Standard Library.pdf' 'test/'
  ok 3
  
  Note:
  
  - There are 3 files in the second similar files group.
  - The file 'Python Standard Library.zip' is now in the 2nd similar files
    group because its size is now similar to the group.
  
  == Testing 4, if Python.zip is even bigger, result should be:
  
  ## =========
             3 'CardLayoutTest.java' 'test/'
             5 'TestLayout.java' 'test/'
  
  ## =========
             4 'GNU - Python Standard Library (2001).rar'       'test/'
             5 'GNU - 2001 - Python Standard Library.pdf'       'test/'
             6 'Python Standard Library.zip'                    'test/'
             9 '(eBook) GNU - Python Standard Library 2001.pdf' 'test/'
  ok 4
  
  Note:
  
  - There are 4 files in the second similar files group.
  - The file 'Python Standard Library.zip' is still in the group.
  - But this time, because it is also considered to be similar to the .pdf
    file (since their size are now similar, 6 vs 9), a 4th file the .pdf
    is now included in the 2nd group.
  - If the size of file 'Python Standard Library.zip' is 12(KB), then the
    second similar files group will be split into two. Do you know why and
    which files each group will contain?</pre>
<p>The File::Searcher::Similars package comes with a fully functional demo
script fileSimilars.pl. Please refer to its help file for further
explanations.</p>
<p>This package is highly customizable. Refer to hash variable %config and/or
the 3 arrwash_ functions for customization hints.</p>
<p>
</p>
<hr />
<h1><a name="author">AUTHOR</a></h1>
<pre>
 Author:  SUN, Tong &lt;suntong at cpan.org&gt;
 HomeURL: <a href="http://xpt.sourceforge.net/">http://xpt.sourceforge.net/</a></pre>
<p>
</p>
<hr />
<h1><a name="see_also">SEE ALSO</a></h1>
<p>File::Compare(3), <code>perl(1)</code> and the following scripts.</p>
<p>## File::Find::Duplicates - Find duplicate files</p>
<p><a href="http://belfast.pm.org/Modules/Duplicates.html">http://belfast.pm.org/Modules/Duplicates.html</a></p>
<p>my %dupes = find_duplicate_files('/basedir1', '/basedir2');</p>
<p>When passed a base directory (or list of such directories) it returns a hash,
keyed on filesize, of lists of the identical files of that size.</p>
<p>## ch::claudio::finddups - Find duplicate files in given directory</p>
<p><a href="http://www.claudio.ch/Perl/finddups.html">http://www.claudio.ch/Perl/finddups.html</a></p>
<p>ch::claudio::finddups is a script as well as a package. When called as script
it will search the directory and its subdirectories for files with (possibly)
identical content.</p>
<p>To find identical files fast this program will just remember the Digest::SHA1
hash of each file, and signal two files as equal if their hash matches. It
will output lines that can be given to a bourne shell to compare the two
files, and remove one of them if the comparison indicated that the files are
indeed identical.</p>
<p>Besides that it can be used as a package, and gives so access to the following
variables, routines and methods.</p>
<p>## dupper.pl - finds duplicate files, optionally removes them</p>
<p><a href="http://sial.org/code/perl/scripts/dupper.pl.html">http://sial.org/code/perl/scripts/dupper.pl.html</a></p>
<p>Script to find (and optionally remove) duplicate files in one or more
directories. Duplicates are spotted though the use of MD5 checksums.</p>
<p>
</p>
<hr />
<h1><a name="copyright">COPYRIGHT</a></h1>
<p>Copyright (c) 2001-2008 Tong SUN. All rights reserved.</p>
<p>
</p>
<hr />
<h1><a name="todo">TODO</a></h1>

</body>

</html>
